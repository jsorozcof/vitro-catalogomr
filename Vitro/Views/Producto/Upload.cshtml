@model Vitro.Models.UploadViewModel

@{
    ViewBag.Title = "Carga de Productos";
}

<h2 class="h1 text-upper">@ViewBag.Title</h2>

<div class="row">
    <h4 class="h4 text-sm">Recuerde que las imagenes de los productos que va a <b>cargar/actualizar</b> deben estar en la siguiente ruta <b>C:\imagenes_catalogo</b></h4>
    <div class="cell-md-12">

        @{
            string classAlerta = string.Empty;
        }

        @if (TempData["ErrorMensaje"] != null)
        {

            if (TempData["ErrorMensaje"].ToString().Contains("ERROR"))
            {
                classAlerta = "alert alert-danger";
            }
            else
            {
                classAlerta = "alert alert-success";
            }

            <div class="row" style="margin-top:2%;">
                <div class="colspan-md-12">
                    <div class="@classAlerta" role="alert">
                        @TempData["ErrorMensaje"].ToString()
                    </div>
                </div>
            </div>
        }

        @if (Request.Params["State"].Equals("Fails"))
        {
            <div class="panel fg-white p-5 text-upper bg-red">
                <span><strong>EL PROCESO DE CARGA HA SIDO INTERRUMPIDO DEBIDO A ERRORES. POR FAVOR, REVISE LOS DETALLES.</strong></span>
                <div>
                    <a href="@Url.Action("Upload","Producto",new { State="Upload"})" class="button fg-white mt-5" style="background: #0057b8;">VOLVER</a>
                    ||
                    <a href="@Url.Action("Upload","Producto",new { State="Upload"})" class="button fg-white mt-5" style="background: #0057b8;">DESCARGAR DETALLE</a>
                </div>
                <div>
                    
                </div>
            </div>
            if (ViewBag.Errores != null && ((List<Vitro.Models.LogErrorCargaViewModel>)ViewBag.Errores).Count > 0)
            {
                <div class="row h-vh-100">
                    <div class="cell-md-12">
                        <h3>Errores en la Carga</h3>
                        <table class="table" data-role="table" data-show-pagination="false" data-show-table-info="false" data-show-search="false" data-show-rows-steps="false" data-horizontal-scroll="true">
                            <thead>
                                <tr>
                                    <th>Fecha</th>
                                    <th>Usuario</th>
                                    <th>Fila</th>
                                    <th>Columna</th>
                                    <th>Valor Incorrecto</th>
                                    <th>Descripción</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var error in (List<Vitro.Models.LogErrorCargaViewModel>)ViewBag.Errores)
                                {
                                    <tr>
                                        <td>@error.FechaProceso</td>
                                        <td>@error.Usuario</td>
                                        <td>@error.Fila</td>
                                        <td>@error.Columna</td>
                                        <td>@error.ValorIncorrecto</td>
                                        <td>@error.DescripcionError</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

        }
        else
        {
            if (TempData["ProccessRowsCount"] != null)
            {
                <div class="panel fg-white p-5 text-upper" style="background-color: #005776;">
                    <div>Se han procesado <strong>@TempData["ProccessRowsCount"]</strong> productos</div>
                    <div><span class="mif-chevron-right icon"></span> Número de registros exitosos <strong>@TempData["ProccessSuccessCount"]</strong></div>
                    <hr />
                    @using (Html.BeginForm("ResultUpload", "Producto", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <button type="submit" class="button fg-white" style="background-color: #0057b8;">DESCARGAR RESULTADOS</button>
                        </div>
                    }
                </div>
            }
            <div class="my-5"></div>
            using (Html.BeginForm("Upload", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @*<div class="form-group">
                    @Html.LabelFor(x => x.Recursos)
                    @Html.TextBoxFor(x => x.Recursos)
                    @Html.ValidationMessageFor(x => x.Recursos, null, new { @class = "fg-red" })
                </div>*@
                <div class="form-group">
                    @Html.TextBoxFor(x => x.File, new { data_role = "file", @type = "file" })
                    @Html.ValidationMessageFor(x => x.File, null, new { @class = "fg-red" })
                </div>
                <div class="form-group">
                    @Html.CheckBoxFor(x => x.Actualizar, new { data_role = "checkbox", data_caption = "Actualizar Registros" })
                </div>
                <div class="form-group">
                    <button type="submit" class="button fg-white" style="background-color: #0057b8;">PROCESAR</button>
                </div>
            }
        }
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}